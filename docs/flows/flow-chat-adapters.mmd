sequenceDiagram
    participant Facebook as Facebook Messenger
    participant Zalo as Zalo Chat
    participant TikTok as TikTok Chat
    participant ChatAdapters as Chat Adapters Service<br/>:8006
    participant APIGateway as API Gateway<br/>:8000
    participant ModelGateway as Model Gateway<br/>:8080
    participant ToolsService as Tools Service<br/>:8082
    participant RealtimeGateway as Realtime Gateway<br/>:8084
    participant Redis as Redis<br/>:6379
    participant Postgres as PostgreSQL<br/>:5432
    participant NATS as NATS<br/>:4222
    participant UsageMetering as Usage Metering<br/>:8095
    participant AuditLog as Audit Log<br/>:8096

    %% Facebook Messenger Flow
    Note over Facebook,AuditLog: === Facebook Messenger Integration ===
    Facebook->>ChatAdapters: 1. POST /facebook/webhook<br/>Headers: X-Hub-Signature: sha1=xxx<br/>Body: {object: "page", entry: [{messaging: [{sender: {id: "user_123"}, message: {text: "Hello, what can you help me with?"}}]}]}

    ChatAdapters->>ChatAdapters: 2. Verify webhook signature<br/>Parse Facebook message format
    ChatAdapters->>Redis: 3. GET facebook:user_123<br/>Retrieve user session
    Redis-->>ChatAdapters: Session data or null

    ChatAdapters->>APIGateway: 4. POST /ask<br/>Headers: X-Platform: facebook, X-User-ID: user_123, X-Tenant-Id: tenant_facebook<br/>Body: {query: "Hello, what can you help me with?", session_id: "fb_sess_123"}

    APIGateway->>ToolsService: 5. POST /v1/tools/exec<br/>Body: {name: "web_search", args: {query: "assistant capabilities"}}
    ToolsService-->>APIGateway: 200 OK<br/>{success: true, output: "AI assistant capabilities..."}

    APIGateway->>ModelGateway: 6. POST /v1/chat<br/>Body: {messages: [{role: "system", content: "You are a helpful assistant..."}, {role: "user", content: "Hello, what can you help me with?"}]}
    ModelGateway-->>APIGateway: 200 OK<br/>{content: "Hello! I can help you with various tasks..."}

    APIGateway->>UsageMetering: 7. POST /usage<br/>Body: {service: "chat-adapters", platform: "facebook", tokens_used: 85}
    APIGateway->>AuditLog: 8. POST /audit<br/>Body: {action: "facebook_message", user_id: "user_123", platform: "facebook"}

    APIGateway-->>ChatAdapters: 9. 200 OK<br/>{answer: "Hello! I can help you with various tasks...", citations: ["[1] Live web data"], trace: ["Web search successful", "AI response generated"]}

    ChatAdapters->>Facebook: 10. POST /v2.6/me/messages<br/>Headers: Authorization: Bearer PAGE_ACCESS_TOKEN<br/>Body: {recipient: {id: "user_123"}, message: {text: "Hello! I can help you with various tasks..."}}

    %% Zalo Chat Flow
    Note over Zalo,AuditLog: === Zalo Chat Integration ===
    Zalo->>ChatAdapters: 11. POST /zalo/webhook<br/>Headers: X-Zalo-Signature: sha256=xxx<br/>Body: {sender: {id: "zalo_user_456"}, recipient: {id: "zalo_oa_789"}, message: {text: "Can you check the latest AI news?"}, timestamp: 1640995200}

    ChatAdapters->>ChatAdapters: 12. Verify Zalo signature<br/>Parse Zalo message format
    ChatAdapters->>Redis: 13. GET zalo:user_456<br/>Retrieve Zalo user context

    ChatAdapters->>APIGateway: 14. POST /ask<br/>Headers: X-Platform: zalo, X-User-ID: user_456, X-Tenant-Id: tenant_zalo<br/>Body: {query: "Can you check the latest AI news?", session_id: "zalo_sess_456"}

    APIGateway->>ToolsService: 15. POST /v1/tools/exec<br/>Body: {name: "web_search", args: {query: "latest AI news 2024"}}
    ToolsService-->>APIGateway: 200 OK<br/>{success: true, output: "Latest AI news: GPT-4 updates, new models..."}

    APIGateway->>ModelGateway: 16. POST /v1/chat<br/>Body: {messages: [{role: "system", content: "You have access to latest AI news..."}, {role: "user", content: "Can you check the latest AI news?"}]}
    ModelGateway-->>APIGateway: 200 OK<br/>{content: "Here are the latest AI developments: GPT-4 improvements, new language models..."}

    APIGateway-->>ChatAdapters: 17. 200 OK<br/>{answer: "Here are the latest AI developments...", citations: ["[1] Live web data via FIRECRAWL"], trace: ["Web search successful"]}

    ChatAdapters->>Zalo: 18. POST /v2.0/oa/message<br/>Headers: Authorization: Bearer ZALO_OA_TOKEN<br/>Body: {recipient: {user_id: "user_456"}, message: {text: "Here are the latest AI developments..."}}

    %% TikTok Chat Flow
    Note over TikTok,AuditLog: === TikTok Chat Integration ===
    TikTok->>ChatAdapters: 19. POST /tiktok/webhook<br/>Headers: X-TikTok-Signature: sha256=xxx<br/>Body: {msg_id: "msg_789", from: {user_id: "tiktok_user_789"}, msg_type: "text", content: {text: "What's trending in tech?"}, timestamp: 1640995300}

    ChatAdapters->>ChatAdapters: 20. Verify TikTok signature<br/>Parse TikTok message format
    ChatAdapters->>Redis: 21. GET tiktok:user_789<br/>Retrieve TikTok user context

    ChatAdapters->>APIGateway: 22. POST /ask<br/>Headers: X-Platform: tiktok, X-User-ID: user_789, X-Tenant-Id: tenant_tiktok<br/>Body: {query: "What's trending in tech?", session_id: "tiktok_sess_789"}

    APIGateway->>ToolsService: 23. POST /v1/tools/exec<br/>Body: {name: "web_search", args: {query: "trending technology 2024"}}
    ToolsService-->>APIGateway: 200 OK<br/>{success: true, output: "Trending tech: AI, blockchain, quantum computing..."}

    APIGateway->>ModelGateway: 24. POST /v1/chat<br/>Body: {messages: [{role: "system", content: "You have access to trending tech topics..."}, {role: "user", content: "What's trending in tech?"}]}
    ModelGateway-->>APIGateway: 200 OK<br/>{content: "Here's what's trending in tech: AI advancements, blockchain innovations..."}

    APIGateway-->>ChatAdapters: 25. 200 OK<br/>{answer: "Here's what's trending in tech...", citations: ["[1] Live web data"], trace: ["Web search successful"]}

    ChatAdapters->>TikTok: 26. POST /v1/messages/send<br/>Headers: Authorization: Bearer TIKTOK_ACCESS_TOKEN<br/>Body: {to_user_id: "user_789", msg_type: "text", content: {text: "Here's what's trending in tech..."}}

    %% Real-time Updates (WebSocket)
    Note over ChatAdapters,RealtimeGateway: === Real-time Updates ===
    ChatAdapters->>RealtimeGateway: 27. WebSocket /ws/{tenant_id}<br/>Subscribe to real-time updates
    RealtimeGateway->>NATS: 28. SUBSCRIBE tenant.{tenant_id}.updates<br/>Listen for platform updates

    %% Error Handling
    alt Webhook verification fails
        ChatAdapters-->>Facebook: 401 Unauthorized<br/>Invalid signature
        Note over ChatAdapters: Log security event<br/>Block unauthorized access
    end

    alt Platform API error
        ChatAdapters->>Facebook: POST /v2.6/me/messages<br/>Message delivery attempt
        Facebook-->>ChatAdapters: 400 Bad Request<br/>Invalid user ID or message format
        ChatAdapters->>Redis: 29. SET error:facebook:user_123<br/>Log delivery failure for retry
        Note over ChatAdapters: Implement retry logic<br/>Dead letter queue for failed messages
    end

    alt Rate limiting
        APIGateway-->>ChatAdapters: 429 Too Many Requests<br/>Rate limit exceeded
        ChatAdapters-->>Facebook: 30. POST /v2.6/me/messages<br/>Body: {message: {text: "I'm receiving too many requests. Please wait a moment."}}
    end

    %% Background Processing
    Note over ChatAdapters,Postgres: Background: Message delivery tracking<br/>Analytics aggregation<br/>User engagement metrics<br/>Platform-specific optimizations
