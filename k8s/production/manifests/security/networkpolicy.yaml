# NetworkPolicy for east-west traffic control in Multi-Tenant AIaaS Platform

---
# Namespace labels for network policy targeting
apiVersion: v1
kind: Namespace
metadata:
  name: production
  labels:
    name: production
    tier: application

---
apiVersion: v1
kind: Namespace
metadata:
  name: database
  labels:
    name: database
    tier: data

---
apiVersion: v1
kind: Namespace
metadata:
  name: cache
  labels:
    name: cache
    tier: cache

---
apiVersion: v1
kind: Namespace
metadata:
  name: messaging
  labels:
    name: messaging
    tier: messaging

---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    name: monitoring
    tier: monitoring

---
# NetworkPolicy for API Gateway
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-netpol
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  # Allow health checks from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
  egress:
  # Allow egress to all services in production namespace
  - to:
    - namespaceSelector:
        matchLabels:
          name: production
    ports:
    - protocol: TCP
      port: 8001  # Orchestrator
    - protocol: TCP
      port: 8002  # Router Service
    - protocol: TCP
      port: 8003  # Realtime Service
    - protocol: TCP
      port: 8004  # Billing Service
    - protocol: TCP
      port: 8005  # Analytics Service
  # Allow egress to database
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
  # Allow egress to cache
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379
  # Allow egress to messaging
  - to:
    - namespaceSelector:
        matchLabels:
          name: messaging
    ports:
    - protocol: TCP
      port: 4222
      port: 8222

---
# NetworkPolicy for Orchestrator
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: orchestrator-netpol
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: orchestrator
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8001
  # Allow health checks from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8001
  egress:
  # Allow egress to Router Service
  - to:
    - podSelector:
        matchLabels:
          app: router-service
    ports:
    - protocol: TCP
      port: 8002
  # Allow egress to Realtime Service
  - to:
    - podSelector:
        matchLabels:
          app: realtime
    ports:
    - protocol: TCP
      port: 8003
  # Allow egress to database
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
  # Allow egress to cache
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379
  # Allow egress to messaging
  - to:
    - namespaceSelector:
        matchLabels:
          name: messaging
    ports:
    - protocol: TCP
      port: 4222

---
# NetworkPolicy for Router Service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: router-service-netpol
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: router-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from Orchestrator
  - from:
    - podSelector:
        matchLabels:
          app: orchestrator
    ports:
    - protocol: TCP
      port: 8002
  # Allow health checks from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8002
  egress:
  # Allow egress to cache
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379
  # Allow egress to messaging
  - to:
    - namespaceSelector:
        matchLabels:
          name: messaging
    ports:
    - protocol: TCP
      port: 4222

---
# NetworkPolicy for Realtime Service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: realtime-netpol
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: realtime
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8003
  # Allow health checks from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8003
  egress:
  # Allow egress to cache
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379
  # Allow egress to messaging
  - to:
    - namespaceSelector:
        matchLabels:
          name: messaging
    ports:
    - protocol: TCP
      port: 4222

---
# NetworkPolicy for Analytics Service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: analytics-service-netpol
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: analytics-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8005
  # Allow health checks from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8005
  egress:
  # Allow egress to database (read-only)
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
  # Allow egress to cache
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379

---
# NetworkPolicy for Billing Service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: billing-service-netpol
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: billing-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from API Gateway
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8004
  # Allow health checks from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8004
  egress:
  # Allow egress to database
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
  # Allow egress to cache
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379
  # Allow egress to messaging
  - to:
    - namespaceSelector:
        matchLabels:
          name: messaging
    ports:
    - protocol: TCP
      port: 4222

---
# NetworkPolicy for Database
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: database-netpol
  namespace: database
spec:
  podSelector:
    matchLabels:
      app: postgres
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from production namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: production
    ports:
    - protocol: TCP
      port: 5432
  # Allow health checks from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 5432
  egress:
  # Allow egress to monitoring for metrics
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090

---
# NetworkPolicy for Cache (Redis)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cache-netpol
  namespace: cache
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from production namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: production
    ports:
    - protocol: TCP
      port: 6379
  # Allow health checks from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 6379
  egress:
  # Allow egress to monitoring for metrics
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090

---
# NetworkPolicy for Messaging (NATS)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: messaging-netpol
  namespace: messaging
spec:
  podSelector:
    matchLabels:
      app: nats
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from production namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: production
    ports:
    - protocol: TCP
      port: 4222  # NATS client port
      port: 8222  # NATS monitoring port
  # Allow health checks from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8222
  egress:
  # Allow egress to monitoring for metrics
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090

---
# NetworkPolicy for Monitoring (Prometheus)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-netpol
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app: prometheus
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from all namespaces for metrics collection
  - from: []
    ports:
    - protocol: TCP
      port: 9090
  egress:
  # Allow egress to all namespaces for metrics scraping
  - to: []
    ports:
    - protocol: TCP
      port: 8000
      port: 8001
      port: 8002
      port: 8003
      port: 8004
      port: 8005
      port: 5432
      port: 6379
      port: 8222

---
# Default deny all policy for production namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: production
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  # No ingress or egress rules means deny all
