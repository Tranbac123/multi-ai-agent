name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Generate changelog from git commits
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD > CHANGELOG.md
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Changes in this Release
            ${{ steps.changelog.outputs.changelog }}

            ## Docker Images
            - `ghcr.io/${{ github.repository }}/api-gateway:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/orchestrator:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/router:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/realtime:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/ingestion:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}/billing:${{ github.ref_name }}`
          draft: false
          prerelease: false

  build-and-push:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/api-gateway:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/api-gateway:latest
            ghcr.io/${{ github.repository }}/orchestrator:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/orchestrator:latest
            ghcr.io/${{ github.repository }}/router:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/router:latest
            ghcr.io/${{ github.repository }}/realtime:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/realtime:latest
            ghcr.io/${{ github.repository }}/ingestion:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/ingestion:latest
            ghcr.io/${{ github.repository }}/billing:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/billing:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign images with Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign images
        run: |
          cosign sign --yes ghcr.io/${{ github.repository }}/api-gateway:${{ github.ref_name }}
          cosign sign --yes ghcr.io/${{ github.repository }}/orchestrator:${{ github.ref_name }}
          cosign sign --yes ghcr.io/${{ github.repository }}/router:${{ github.ref_name }}
          cosign sign --yes ghcr.io/${{ github.repository }}/realtime:${{ github.ref_name }}
          cosign sign --yes ghcr.io/${{ github.repository }}/ingestion:${{ github.ref_name }}
          cosign sign --yes ghcr.io/${{ github.repository }}/billing:${{ github.ref_name }}

  update-helm-charts:
    runs-on: ubuntu-latest
    needs: [create-release, build-and-push]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: "3.12.0"

      - name: Update Helm chart versions
        run: |
          # Update chart versions
          sed -i "s/version: .*/version: ${{ github.ref_name }}/g" helm/aiaas/Chart.yaml
          sed -i "s/appVersion: .*/appVersion: ${{ github.ref_name }}/g" helm/aiaas/Chart.yaml

          # Update image tags
          sed -i "s/tag: .*/tag: ${{ github.ref_name }}/g" helm/aiaas/values.yaml

      - name: Package Helm chart
        run: |
          helm package helm/aiaas/

      - name: Upload Helm chart
        uses: actions/upload-artifact@v3
        with:
          name: helm-chart
          path: aiaas-*.tgz

  notify:
    runs-on: ubuntu-latest
    needs: [create-release, build-and-push, update-helm-charts]
    if: always()

    steps:
      - name: Notify release status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Release ${{ github.ref_name }} ${{ job.status }}!

            ðŸš€ **New Release Available**
            - Version: ${{ github.ref_name }}
            - Docker Images: `ghcr.io/${{ github.repository }}`
            - Helm Chart: Available in artifacts
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
